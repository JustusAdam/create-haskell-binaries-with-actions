# This is a basic workflow to help you get started with Actions

name: Create Assets

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  release:
    types: [published]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ubuntu-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Cache programs and 
      uses: actions/cache@v2
      env:
        cache-name: cache-tools-and-libraries
      with:
        path: ~/.stack
        key: ${{ runner.os }}-ca-${{ env.cache-name }}-${{ hashFiles('**/stack.yaml.lock') }}
        restore-keys: |
          ${{ runner.os }}-ca-${{ env.cache-name }}-
          ${{ runner.os }}-ca-
          ${{ runner.os }}-
  
    - name: Install dependencies
      run: sudo apt-get install haskell-stack

    # Runs a single command using the runners shell
    - name: Build the project
      run: |
        stack build
        
    - name: Tar and strip the binary
      run: |
        export PROGRAM=chbwa
        cp `stack exec -- which $PROGRAM` $PROGRAM
        ls -l $PROGRAM
        strip $PROGRAM
        ls -l $PROGRAM
        tar -cavf program.tar.gz $PROGRAM
    
    - name: Debug print some stuff
      run: |
        echo `which stack`
        echo ${{ github.job }}
        echo ${{ github.event_path }}
        echo ${{ github.event.type }}
        echo ${{ github.event.release.upload_url }}
        echo ${{ github.event.release.assets_url }}
        
    - name: Upload assets
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./program.tar.gz
        asset_name: program.tar.gz
        asset_content_type: application/tar.gz
